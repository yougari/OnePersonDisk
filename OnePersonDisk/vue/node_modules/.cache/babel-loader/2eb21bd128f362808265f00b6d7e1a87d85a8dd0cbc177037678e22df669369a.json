{"ast":null,"code":"import * as echarts from 'echarts';\nconst lineOption = {\n  //折线图\n  title: {\n    text: '文件上传趋势图',\n    left: 'center'\n  },\n  tooltip: {\n    trigger: 'axis'\n  },\n  legend: {\n    left: 'left'\n  },\n  xAxis: {\n    type: 'category',\n    data: [] //横轴：日期\n  },\n\n  yAxis: {\n    type: 'value'\n  },\n  series: [{\n    name: '文件数量',\n    data: [],\n    //纵轴\n    type: 'line',\n    smooth: true\n  }]\n};\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      notices: []\n    };\n  },\n  created() {\n    this.$request.get('/notice/selectAll').then(res => {\n      this.notices = res.data || [];\n    });\n  },\n  mounted() {\n    //折线图\n    let linetDom = document.getElementById('line'); // div id=line\n    let lineChart = echarts.init(linetDom);\n    this.$request.get('/diskFiles/count', {\n      params: {\n        days: this.days\n      }\n    }).then(res => {\n      lineOption.xAxis.data = res.data?.map(v => v.date) || [];\n      lineOption.series[0].data = res.data.map(v => v.count) || [];\n      lineChart.setOption(lineOption);\n    });\n  }\n};","map":{"version":3,"names":["echarts","lineOption","title","text","left","tooltip","trigger","legend","xAxis","type","data","yAxis","series","name","smooth","user","JSON","parse","localStorage","getItem","notices","created","$request","get","then","res","mounted","linetDom","document","getElementById","lineChart","init","params","days","map","v","date","count","setOption"],"sources":["src/views/manager/Home.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"card\" style=\"padding: 15px\">\n      您好，{{ user?.name }}！欢迎使用本系统\n    </div>\n    <div style=\"display: flex; grid-gap: 10px; margin: 10px 0\">\n      <div style=\"width: 50%\" class=\"card\">\n        <div style=\"margin-bottom: 20px\">\n          <el-select style=\"width: 150px\" v-model=\"days\" @change=\"loadLine\">\n            <el-option :value=\"7\" label=\"近一周\"></el-option>\n            <el-option :value=\"14\" label=\"近2周\"></el-option>\n            <el-option :value=\"30\" label=\"近一个月\"></el-option>\n          </el-select>\n        </div>\n        <div style=\"width: 100%; height: 400px\" id=\"line\"></div>\n      </div>\n    <div style=\"display: flex; margin: 10px 0\">\n      <div style=\"width: 50%;\" class=\"card\">\n        <div style=\"margin-bottom: 30px; font-size: 20px; font-weight: bold\">公告列表</div>\n        <div >\n          <el-timeline  reverse slot=\"reference\">\n            <el-timeline-item v-for=\"item in notices\" :key=\"item.id\" :timestamp=\"item.time\">\n              <el-popover\n                  placement=\"right\"\n                  width=\"200\"\n                  trigger=\"hover\"\n                  :content=\"item.content\">\n                <span slot=\"reference\">{{ item.title }}</span>\n              </el-popover>\n            </el-timeline-item>\n          </el-timeline>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport * as echarts from 'echarts'\n\nconst lineOption = {//折线图\n  title: {\n    text: '文件上传趋势图',\n    left: 'center'\n  },\n  tooltip: {\n    trigger: 'axis'\n  },\n  legend: {\n    left: 'left'\n  },\n  xAxis: {\n    type: 'category',\n    data: []//横轴：日期\n  },\n  yAxis: {\n    type: 'value'\n  },\n  series: [\n    {\n      name:'文件数量',\n      data: [],//纵轴\n      type: 'line',\n      smooth: true\n    },\n  ]\n}\n\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      notices: []\n    }\n  },\n  created() {\n    this.$request.get('/notice/selectAll').then(res => {\n      this.notices = res.data || []\n    })\n  },\n  mounted() {\n    //折线图\n    let linetDom = document.getElementById('line');  // div id=line\n    let lineChart = echarts.init(linetDom);\n    this.$request.get('/diskFiles/count', { params: { days: this.days } }).then(res => {\n      lineOption.xAxis.data = res.data?.map(v => v.date) || []\n      lineOption.series[0].data = res.data.map(v => v.count) || []\n      lineChart.setOption(lineOption)\n    })\n  }\n}\n</script>\n"],"mappings":"AAsCA,YAAAA,OAAA;AAEA,MAAAC,UAAA;EAAA;EACAC,KAAA;IACAC,IAAA;IACAC,IAAA;EACA;EACAC,OAAA;IACAC,OAAA;EACA;EACAC,MAAA;IACAH,IAAA;EACA;EACAI,KAAA;IACAC,IAAA;IACAC,IAAA;EACA;;EACAC,KAAA;IACAF,IAAA;EACA;EACAG,MAAA,GACA;IACAC,IAAA;IACAH,IAAA;IAAA;IACAD,IAAA;IACAK,MAAA;EACA;AAEA;AAEA;EACAD,IAAA;EACAH,KAAA;IACA;MACAK,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,QAAA,CAAAC,GAAA,sBAAAC,IAAA,CAAAC,GAAA;MACA,KAAAL,OAAA,GAAAK,GAAA,CAAAf,IAAA;IACA;EACA;EACAgB,QAAA;IACA;IACA,IAAAC,QAAA,GAAAC,QAAA,CAAAC,cAAA;IACA,IAAAC,SAAA,GAAA9B,OAAA,CAAA+B,IAAA,CAAAJ,QAAA;IACA,KAAAL,QAAA,CAAAC,GAAA;MAAAS,MAAA;QAAAC,IAAA,OAAAA;MAAA;IAAA,GAAAT,IAAA,CAAAC,GAAA;MACAxB,UAAA,CAAAO,KAAA,CAAAE,IAAA,GAAAe,GAAA,CAAAf,IAAA,EAAAwB,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAC,IAAA;MACAnC,UAAA,CAAAW,MAAA,IAAAF,IAAA,GAAAe,GAAA,CAAAf,IAAA,CAAAwB,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAE,KAAA;MACAP,SAAA,CAAAQ,SAAA,CAAArC,UAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}